<?xml version="1.0" encoding="UTF-8"?>
<stub:stub xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:stub="http://www.compuware.com/model/xml/stub" alias="" disposition="MOD" encoding="1047" id="Unit%20Test/Stubs/CWKTDB2X_RPTFILE_FILE_01.stub" stubtype="QSAM" target="RPTFILE" token="50000">
  <stub:description>Created: Jan 16, 2019 4:07:43 PM</stub:description>
  <stub:stubdata id="0" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output0.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output0.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="1" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output1.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output1.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="2" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output2.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output2.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="3" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR1.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR1.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1" id="arg0.EMPLOYEE_HDR1">
        <properties:properties>
          <properties:property name="value" type="string">40D9E4D540C4C1E3C54040F0F161F1F661F1F940404040404040C5D4D7D3D6E8C5C540C3D6D4D7C5D5E2C1E3C9D6D540D9C5D7D6D9E3404040404040404040404040404040404040D7C1C7C5404040F1</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER0" id="output3.arg0.EMPLOYEE_HDR1.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER1" id="output3.arg0.EMPLOYEE_HDR1.FILLER1" offset="1"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_MM" id="output3.arg0.EMPLOYEE_HDR1.EMP_RUN_MM" offset="11"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER2" id="output3.arg0.EMPLOYEE_HDR1.FILLER2" offset="13"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_DD" id="output3.arg0.EMPLOYEE_HDR1.EMP_RUN_DD" offset="14"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER3" id="output3.arg0.EMPLOYEE_HDR1.FILLER3" offset="16"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_YY" id="output3.arg0.EMPLOYEE_HDR1.EMP_RUN_YY" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER4" id="output3.arg0.EMPLOYEE_HDR1.FILLER4" offset="19"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER5" id="output3.arg0.EMPLOYEE_HDR1.FILLER5" offset="26"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER6" id="output3.arg0.EMPLOYEE_HDR1.FILLER6" offset="54"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER7" id="output3.arg0.EMPLOYEE_HDR1.FILLER7" offset="72"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_PAGE" id="output3.arg0.EMPLOYEE_HDR1.EMP_PAGE" offset="77"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER1">
        <checkconditions:expression>'RUN DATE' eq result.arg0.EMPLOYEE_HDR1.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">RUN DATE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.EMP_RUN_MM">
        <checkconditions:expression>BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_HDR1.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.EMP_RUN_DD">
        <checkconditions:expression>BigDecimalCreator.make('16').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">16</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER3">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_HDR1.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.EMP_RUN_YY">
        <checkconditions:expression>BigDecimalCreator.make('19').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">19</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER5">
        <checkconditions:expression>'EMPLOYEE COMPENSATION REPORT' eq result.arg0.EMPLOYEE_HDR1.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EMPLOYEE COMPENSATION REPORT</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.FILLER7">
        <checkconditions:expression>'PAGE' eq result.arg0.EMPLOYEE_HDR1.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">PAGE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.EMPLOYEE_HDR1.EMP_PAGE">
        <checkconditions:expression>BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_PAGE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="4" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output4.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="5" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output5.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output5.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="6" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR2.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR2.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2" id="arg0.EMPLOYEE_HDR2">
        <properties:properties>
          <properties:property name="value" type="string">40404040404040404040404040404040404040404040404040404040404040C8C9D9C54040E8D9E240D6C640404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER0" id="output6.arg0.EMPLOYEE_HDR2.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER1" id="output6.arg0.EMPLOYEE_HDR2.FILLER1" offset="31"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER2" id="output6.arg0.EMPLOYEE_HDR2.FILLER2" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER3" id="output6.arg0.EMPLOYEE_HDR2.FILLER3" offset="37"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER4" id="output6.arg0.EMPLOYEE_HDR2.FILLER4" offset="43"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.EMPLOYEE_HDR2.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.EMPLOYEE_HDR2.FILLER1">
        <checkconditions:expression>'HIRE' eq result.arg0.EMPLOYEE_HDR2.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">HIRE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.EMPLOYEE_HDR2.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.EMPLOYEE_HDR2.FILLER3">
        <checkconditions:expression>'YRS OF' eq result.arg0.EMPLOYEE_HDR2.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">YRS OF</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.EMPLOYEE_HDR2.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="7" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR3.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_HDR3.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3" id="arg0.EMPLOYEE_HDR3">
        <properties:properties>
          <properties:property name="value" type="string">40C5D4D7D3D6E8C5C540D5C1D4C5404040D9C5C7C9D6D540E3E8D7C5404040C4C1E3C54040E2C5D9E5C9C3C54040E2C1D3C1D9E8404040D661E3404040C3D6D4D4C9E2E2C9D6D540404040E3D6E3C1D3</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER0" id="output7.arg0.EMPLOYEE_HDR3.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER1" id="output7.arg0.EMPLOYEE_HDR3.FILLER1" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER2" id="output7.arg0.EMPLOYEE_HDR3.FILLER2" offset="14"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER3" id="output7.arg0.EMPLOYEE_HDR3.FILLER3" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER4" id="output7.arg0.EMPLOYEE_HDR3.FILLER4" offset="23"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER5" id="output7.arg0.EMPLOYEE_HDR3.FILLER5" offset="24"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER6" id="output7.arg0.EMPLOYEE_HDR3.FILLER6" offset="28"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER7" id="output7.arg0.EMPLOYEE_HDR3.FILLER7" offset="31"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER8" id="output7.arg0.EMPLOYEE_HDR3.FILLER8" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER9" id="output7.arg0.EMPLOYEE_HDR3.FILLER9" offset="37"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER10" id="output7.arg0.EMPLOYEE_HDR3.FILLER10" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER11" id="output7.arg0.EMPLOYEE_HDR3.FILLER11" offset="46"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER12" id="output7.arg0.EMPLOYEE_HDR3.FILLER12" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER13" id="output7.arg0.EMPLOYEE_HDR3.FILLER13" offset="55"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER14" id="output7.arg0.EMPLOYEE_HDR3.FILLER14" offset="58"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER15" id="output7.arg0.EMPLOYEE_HDR3.FILLER15" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER16" id="output7.arg0.EMPLOYEE_HDR3.FILLER16" offset="71"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER17" id="output7.arg0.EMPLOYEE_HDR3.FILLER17" offset="75"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER1">
        <checkconditions:expression>'EMPLOYEE NAME' eq result.arg0.EMPLOYEE_HDR3.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EMPLOYEE NAME</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER3">
        <checkconditions:expression>'REGION' eq result.arg0.EMPLOYEE_HDR3.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">REGION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER5">
        <checkconditions:expression>'TYPE' eq result.arg0.EMPLOYEE_HDR3.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TYPE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER7">
        <checkconditions:expression>'DATE' eq result.arg0.EMPLOYEE_HDR3.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">DATE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER9">
        <checkconditions:expression>'SERVICE' eq result.arg0.EMPLOYEE_HDR3.FILLER9</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SERVICE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER10">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER10</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER11">
        <checkconditions:expression>'SALARY' eq result.arg0.EMPLOYEE_HDR3.FILLER11</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SALARY</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER12">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER12</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER13">
        <checkconditions:expression>'O/T' eq result.arg0.EMPLOYEE_HDR3.FILLER13</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">O/T</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER14">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER14</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER15">
        <checkconditions:expression>'COMMISSION' eq result.arg0.EMPLOYEE_HDR3.FILLER15</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">COMMISSION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER16">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER16</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR3.FILLER17">
        <checkconditions:expression>'TOTAL' eq result.arg0.EMPLOYEE_HDR3.FILLER17</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="8" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output8.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="9" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40D1D6C8D540E2D4C9E3C8404040404040D5D6D9E3C8404040C8404040F1F061F1F561F8F1404040F3F740404040F7F5F0F0F04040404040F0F0F0404040404040F0F0F0404040F7F5F0F0F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output9.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output9.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output9.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output9.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output9.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output9.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output9.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output9.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output9.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output9.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'JOHN SMITH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">JOHN SMITH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'NORTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">NORTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">10</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('15').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">15</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('81').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">81</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('37').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">37</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('750.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">750.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('750.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">750.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="10" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40C7C1C9D340D3C1E6D9C5D5C3C5404040E2D6E4E3C8404040C8404040F0F661F2F561F8F4404040F3F440404040F9F5F0F0F04040404040F0F0F0404040404040F0F0F0404040F9F5F0F0F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output10.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output10.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output10.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output10.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output10.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output10.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output10.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output10.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output10.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'GAIL LAWRENCE' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">GAIL LAWRENCE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'SOUTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SOUTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('6').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">6</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('25').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">25</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('84').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">84</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('34').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">34</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('950.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">950.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('950.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">950.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="11" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40D2C1E3C9C540E6C9D3D3C9C1D4E24040E2D6E4E3C8404040C8404040F1F061F0F261F9F6404040F2F240404040F8F8F0F0F04040404040F0F0F0404040404040F0F0F0404040F8F8F0F0F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output11.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output11.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output11.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output11.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output11.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output11.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output11.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output11.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output11.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'KATIE WILLIAMS' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">KATIE WILLIAMS</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'SOUTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SOUTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">10</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('2').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">2</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('96').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">96</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('22').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">22</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('880.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">880.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('880.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">880.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="12" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40D4C1D9C3C9C140E2E4D3D3C9E5C1D540C5C1E2E340404040C8404040F0F461F0F561F9F3404040F2F5404040F1F2F0F0F0F0404040F1F8F0F0F0404040404040F0F0F04040F1F3F8F0F0F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output12.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output12.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output12.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output12.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output12.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output12.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output12.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output12.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output12.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output12.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'MARCIA SULLIVAN' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">MARCIA SULLIVAN</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'EAST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EAST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('4').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">4</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('5').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">5</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('93').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">93</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('25').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">25</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('1200.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1200.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('180.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">180.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('1380.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1380.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="13" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40D1C1D4C5E240D4D6D9D9C9E2D6D54040C5C1E2E340404040C8404040F0F961F1F361F9F1404040F2F7404040F1F0F1F7F5F04040404040F0F0F0404040404040F0F0F04040F1F0F1F7F5F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output13.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output13.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output13.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output13.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output13.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output13.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output13.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output13.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output13.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output13.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'JAMES MORRISON' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">JAMES MORRISON</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'EAST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EAST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('9').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">9</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('13').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">13</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('91').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">91</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('27').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">27</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('1017.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1017.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('1017.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1017.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="14" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40E3C8D6D4C1E240D3D6D5C74040404040E6C5E2E340404040C8404040F0F361F3F161F8F7404040F3F1404040F1F0F0F0F0F04040404040F0F0F0404040404040F0F0F04040F1F0F0F0F0F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output14.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output14.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output14.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output14.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output14.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output14.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output14.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output14.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output14.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output14.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'THOMAS LONG' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">THOMAS LONG</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'WEST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">WEST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('3').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">3</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('31').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">31</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('87').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">87</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('31').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">31</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('1000.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1000.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('1000.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1000.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="15" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40E2C1D4E4C5D340C1C4C4C1D4E2404040E6C5E2E340404040C8404040F0F161F0F261F8F6404040F3F3404040F1F1F0F0F0F040404040F8F2F5F0404040404040F0F0F04040F1F1F8F2F5F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output15.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output15.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output15.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output15.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output15.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output15.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output15.arg0.EMPLOYEE_DTL.FILLER6" offset="51"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output15.arg0.EMPLOYEE_DTL.FILLER7" offset="59"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output15.arg0.EMPLOYEE_DTL.FILLER8" offset="68"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output15.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="69"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'SAMUEL ADDAMS' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SAMUEL ADDAMS</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'WEST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">WEST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('2').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">2</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('86').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">86</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('33').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">33</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('1100.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1100.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('82.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">82.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('1182.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1182.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="16" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output16.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output16.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="17" name="RPTFILE">
    <stub:interface>../Interfaces/CWKTDB2X_RPTFILE_EMP_TOTAL_DTL.interface#Unit%20Test/Interfaces/CWKTDB2X_RPTFILE_EMP_TOTAL_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#Unit%20Test/Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL" id="arg0.EMP_TOTAL_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40404040E3D6E3C1D340404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040F7F1F6F0F0F04040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER0" id="output17.arg0.EMP_TOTAL_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER1" id="output17.arg0.EMP_TOTAL_DTL.FILLER1" offset="4"/>
      <stub:data baseType="listructure:stringType ../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER2" id="output17.arg0.EMP_TOTAL_DTL.FILLER2" offset="9"/>
      <stub:data baseType="listructure:numberType ../Structures/CWKTDB2X_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.EMP_GRAND_TOTAL" id="output17.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL" offset="70"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output17.arg0.EMP_TOTAL_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMP_TOTAL_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output17.arg0.EMP_TOTAL_DTL.FILLER1">
        <checkconditions:expression>'TOTAL' eq result.arg0.EMP_TOTAL_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output17.arg0.EMP_TOTAL_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMP_TOTAL_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output17.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('7160.00').compareTo(result.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">7160.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
</stub:stub>
